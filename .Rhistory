num_vect>=6
my_char<-c("My","name","is")
my_char
past(my_char,collapse = " ")
paste(my_char,collapse = " ")
my_name<-c(my_char, "Dominick")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"), sep = "")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
myData<-sample(c(y,z),100)
myNA<-is.NA(myData)
myNA<-is.na(myData)
myNA
myData==NA
sum(myNA)
myData
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf-NA)
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector<-1:20
myVector
dim(myVector)
length(myVectore)
length(myVector)
dim(myVector)<-c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix,-Myvector
myMatrix,-myVector
myMatrix<-myVector
?matrix
myMatrix2<-matrix(data=1:20,nrow=4,ncol=5)
identical(myMatrix,myMatrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,myMatrix)
myData<-data.frame(patients,myMatrix)
myData
class(myData)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(myData)<-cnames
myData
pwd
read.csv(hw1_data)
read.csv(hw1_data)
read.csv(hw1_data.csv)
read.csv(file=hw1_data.csv)
x<-c(4,"a",TRUE)
class(x)
class(4L)
rbind(c(1,3,5),c(3,2,10))
x<-list(2,"a","b,"TRUE)
x<-list(2,"a","b",TRUE)
x[[2]]
class(x[[2]])
x[2]
?read.csv
read.csv(file="hw1_data.csv",header=TRUE)
myData<-read.csv(file="hw1_data.csv",header=TRUE)
myData
head(myData)
length(myData)
length(myData$Ozone)
myData[,c(152,153)]
myData[c(152,153),]
myData[47,]
NAs<-myData[is.na(myData)]
NAs
NAs<-is.na(myData)
NAs
sum(NAs$Ozone)
NAs$Ozone
sum(is.na(myData$Ozone)
)
mean(myData$Ozone[!is.na(myData$Ozone)])
sub<-myData[Ozone>31]
sub<-myData[myData$Ozone>31 & myData$Temp>90]
sub<-myData[myData$Ozone>31]
sub<-myData[myData$Ozone>31 & myData$Temp>90,]
sub
mean(sub$Solar.R[!is.na(sub$Solar.R)])
sub<-myData[myData$Month==6,]
sub
mean(sub$month[!is.na(sub$month)])
mean(sub$Month[!is.na(sub$Month)])
mean(sub$Temp[!is.na(sub$Temp)])
sub<-myData[myData$Month==5,]
max(sub$ozone)
max(sub$Ozone)
max(sub$Ozone[!is.na(sub$Ozone)])
getwd
getwd()
cube <- function(x,n){}
cube <- function(x,n){
x^3
}
cube(3)
x<-1:10
if(x>5)
{x<-0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
ls
ls()
packages()
rtools
?rtools
?rtool
install.packages("RMySQL", type="source")
library(RMySQL)
library(RMySQL)
install.packages("RMySQL", type="source")
library(RMySQL)
install.packages("RMySQL")
library(RMySQL)
install.packages("RMySQL", type="source")
library(RMySQL)
install.packages("RMySQL")
install.packages("Hmisc")
install.packages(c("RMySQL", "type="source""))
install.packages(c("RMySQL", "type="source""))
install.packages("RMySQL", type="source")
library(RMySQL)
install.packages("RMySQL", type="source")
library(RMySQL)
library(rtools)
library(rtool)
library(RTools)
library(Rtools)
install.packages("RMySQL", type="source")
library(RMySQL)
Sys.getenv("MYSQL_HOME")
shortPathName( "E:/MySQL/MySQL Server 5.6")
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL", type="source")
library(RMySQL)
Sys.getenv("MYSQL_HOME")
library(RMySQL)
install.packages("RMySQL", type="source")
library(RMySQL)
myapp=oauth_app("github", key="a84f847fadfc1bb311f5", secret="b525feefbc33cc8ebd8df9381046ce7ce1a4a83a")
library(httr)
myapp=oauth_app("github", key="a84f847fadfc1bb311f5", secret="b525feefbc33cc8ebd8df9381046ce7ce1a4a83a")
rm(myapp)
endp <- oauth_endpoints("github")
emp
endp
myapp<- oauth_app("github", "a84f847fadfc1bb311f5")
guthub_token <- oauth2.0_token(oauth_endpoints("github",myapp)
)
guthub_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
install.packages("httpuv")
library(httpuv)
guthub_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
req <- GET("https://github.com/settings/applications",config(token=github_token))
req <- GET("https://github.com/settings/applications",config(token=guthub_token))
req
json1 <- content(req)
json2 <- jsonlite::fromJSON(toJSON(json1))
install.packages("jsonlite")
library(jsonlite)
json2 <- jsonlite::fromJSON(toJSON(json1))
json2 <- jsonlite::fromJSON(toJSON(json1))
json2 <- fromJSON(toJSON(json1))
json1
json1[1,1:4]
library(httr)
library(httpuv)
oauth_endpoints("github")
my_app <- oauth_app("github", "a84f847fadfc1bb311f5")
my_app <- oauth_app("github", "a84f847fadfc1bb311f5", "b525feefbc33cc8ebd8df9381046ce7ce1a4a83a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), my_app)
req <- GET("https://github.com/settings/applications", config(token=github_token))
stop_for_status(req)
content(req)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
json2 = jsonlite::fromJSON(toJSON(json1))
json2 = fromJSON(json1)
json2 = fromJSON(toJSON(json1))
?fromJSON
json2 = toJSON(json1)
json1
req
content(json1)
content(req)
json2 = toJSON(json1)
json2 = toJSON(json1, force=TRUE)
json1<-content(req)
req <- GET("https://github.com/settings/applications", config(token=github_token))
json1<-content(req)
json2 = fromJSON(toJSON(json1))
json1
json1=content(req)
json1
json2=jsonlite::fromJSON(toJSON(json1))
json1
library(httr)
library(httpuv)
library(jsonlite)
myapp <- oauth_app("github", "a84f847fadfc1bb311f5","b525feefbc33cc8ebd8df9381046ce7ce1a4a83a")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
req
json1=content(req)
json2=jsonlite::fromJSON(toJSON(json1))
view(json2)
veiw(json2)
View(json2)
json2$created_at[json2$name==datasharing]
json2$created_at[json2$name=="datasharing"]
acs <-read.csv(url="https://d396qusza40orc.cloudfront.net/getdata/data/ss06pid.csv")
acs <-read.csv("https://d396qusza40orc.cloudfront.net/getdata/data/ss06pid.csv")
install.packages("sqldf")
library(sqldf)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
x<-sqldf("select pwgtp1 from acs where AGEP < 50")
names(x)
head(x)
?unique
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readlines(con)
htmlCode=readLines(con)
close(con)
htmlCode
nchr(10)
nchar(10)
class(htmlCode)
head(htmlCode)
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
?read.table
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=10)
head(dat)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=10, header = TRUE)
head(dat)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=10, header = TRUE,skip=3)
head(dat)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=15, header = TRUE,skip=3)
head(dat)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=15, header = TRUE,skip=3 sep=" ")
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=15, header = TRUE,skip=3, sep=" ")
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=10, header = TRUE,skip=3, sep=" ")
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=13, header = TRUE,)
head(dat)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", header = TRUE)
dat <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", header = TRUE)
head(dat)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", width=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4),header = TRUE)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", width=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4),header = TRUE, skip=3)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", width=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4),header = TRUE, skip=4)
dat <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", width=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
head(dat)
sum(dat$V4)
?'<<-'
source('C:/Users/Sk0rn/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mcm<-makeCacheMatrix(matrix(1:16,nrow=4,ncoll=4))
mcm
mcm$get()
mcm<-makeCacheMatrix(matrix(1:16,nrow=4,ncol=4))
mcm$get()
mcm$getinv()
mcm$setinv()
source('C:/Users/Sk0rn/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
mcm<-makeCacheMatrix(matrix(1:16,nrow=4,ncol=4))
mcm$get()
mcm$set(matrix(1:25,nrow=5,ncol=5))
mcm$get()
cacheSolve(mcm)
source('C:/Users/Sk0rn/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
runif(20)
mcm<-makeCacheMatrix(matrix(runif(16),nrow=4,ncol=4))
mcm$get()
cacheSolve(mcm)
cacheSolve(mcm)
mcmInv<-cacheSolve(mcm)
mcmInv%*%mcm
?'%*%'
mcm$get()%*%mcm$getinv()
mcm<-makeCacheMatrix(matrix(c(2,2,3,2),nrow=2,ncol=2))
cacheSolve(mcm)
cacheSolve(mcm)
mcm$get()%*%mcm$getinv()
rm
rm()
rm()
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
setwd("GCDPeerAssessment")
setwd("GCDPeerAssessment")
setwd("./GCDPeerAssessment")
getwd
getwd()
setwd("C:\Users\Sk0rn\GCDPeerAssessment")
setwd("C:/Users/Sk0rn/GCDPeerAssessment")
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
ls
ks()
ls()
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
rm()
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
head(data)
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
?grep
i
length(ytrain)
length(ytrain$V1)
grep("[a-z]",letters)
grep("[b-f]",letters)
names(data)
grep(c("-mean","-std"),names(data))
grep("-mean",names(data))
grep("-std",names(data))
x<-c(grep("-std",names(data)),grep("-mean",names(data)))
x
data[x]
names(data)
test<-data[,c(1,2,x)]
head(test)
ncol(test)
x<-c(grep("-std()",names(data)),grep("-mean()",names(data)))
test<-data[,c(1,2,x)]
ncol(test)
head(test)
names(test)
x<-c(grep("-std()",names(data)),grep("-mean()",names(data)))
x
grep("-mean()",c("xyz-mean()","asdf-meanfreq()"))
grep("foo",c("arm","foot","lefroo", "bafoobar"))
grep("-foo",c("arm","foot","lefroo", "bafoobar"))
grep("foo()",c("arm","foot","lefroo", "bafoobar"))
?sort
sort(x)
x
x[c(3,1,8,5)]
grep("foo\(\)",c("arm","foot","lefroo", "bafoobar"))
grep("foo/(/))",c("arm","foot","lefroo", "bafoobar"))
grep("foo/(/))",c("arm","foot","lefroo", "bafoo()bar"))
?grep
grep("foo()",c("arm","foot","lefroo", "bafoobar"),fixed=TRUE)
grep("foo()",c("arm","foot","lefroo", "bafoo()bar"),fixed=TRUE)
?append
?aggregate
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
head(mn_std)
nrow(mn_std)
ncol(mn_std)
names(mn_std)
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
head(mn_std)
activity_labels
aggregate(mn_std,by="Activity_Code",mean())
aggregate.data.frame(mn_std,by="Activity_Code",mean())
aggregate(mn_std,activity_labels,mean())
aggregate(mn_std,activity_labels,mean
)
aggregate(mn_std,list(Activity_Label=activity_labels),mean)
aggregate(mn_std,mn_std$Activity_Code,mean)
aggregate(mn_std,list(mn_std$Activity_Code),mean)
aggregate(mn_std[,4:],list(mn_std$Activity_Code),mean)
aggregate(mn_std[,4:nrow(mn_std)],list(mn_std$Activity_Code),mean)
nrow(mn_std)
mn_std[1,4:nrow(mn_std)]
mn_std[1,nrow(mn_std)]
mn_std
nrow(mn_std)
5:nrow(mn_std)
mn_std[1,nrow(mn_std)]
mn_std[1:7,nrow(mn_std)]
mn_std[1:7,nrow(mn_std)-1]
nrow(mn_std)
aggregate(mn_std[,4:ncol(mn_std)],list(mn_std$Activity_Code),mean)
aggregate(mn_std[,4:ncol(mn_std)],list(mn_std$Activity_Label),mean)
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
mean_data_by_activity<-aggregate(mn_std_data[,4:ncol(mn_std_data)],list(mn_std_data$Activity_Label),mean)
summaryRprof(mn_std_data)
?summaryRprof
str(mn_std_data)
str(mean_data_by_activity)
?aggregate
mean_data_by_activity
write.csv(file="./output/mn_std_dat.csv", x=mn_std_data)
write.csv(file="./output/mean_data_by_activity.csv", x=mean_data_by_activity)
write.csv(file="./output/mn_std_dat.csv", x=mn_std_data)
write.csv(file="./output/mean_data_by_activity.csv", x=mean_data_by_activity)
?pdf
?grid.table
?dev.off
install.packages(gridExtra)
install.packages("gridExtra")
library(gridExtra)
pdf("data_output.pdf",height=4,width=14)
grid.table(mean_data_by_activity)
dev.off
dev.off()
pdf("data_output.pdf",height=4,width=50)
grid.table(mean_data_by_activity)
dev.off
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
getwd()
list.files()
"Activity_Label",
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
nrow(tidy_data)
ncol(tidy_data)
summary(tidy_data)
stest$subject
stest$Subject
test$Subject
train$Subject
summary(tidy_data)
ptr(tidy_data)
?prt
?ptr
?prt
?tpr
?trp
?str
str(tidy_data)
head(tidy_data)
tidy_data[,c("Subject", "Activity_Label")]
mn_std_col<-sort(c(grep("-std()",names(data)),
grep("-mean()",names(data))))
mn_std_data<-data[,c(1:3,mn_std_col)]
#Get the average of each column by activity type
by<-list(Subject = mn_std_data$Subject,
Activity_Label = mn_std_data$Activity_Label)
tidy_data<-aggregate(mn_std_data[,4:ncol(mn_std_data)],by,mean)
nrow(tidy_data)
ncol(tidy_data)
names(tidy_data)
source('C:/Users/Sk0rn/GCDPeerAssessment/run_analysis.R', echo=TRUE)
library(gridExtra)
pdf("data.pdf", height = 11, width=8.5)
grid.table(tidy_data)
dev.off()
pdf("data.pdf", height = 30, width=12)
grid.table(tidy_data,gp=gpar(fontsize==6))
grid.table(tidy_data, gp=gpar(fontsize=8))
dev.off()
pdf("data.pdf", height = 11, width=8.5)
grid.table(tidy_data[1:30,], gp=gpar(fontsize=8))
dev.off()
pdf("data.pdf", height = 11, width=50)
grid.table(tidy_data[1:25,6], gp=gpar(fontsize=4))
dev.off()
pdf("data.pdf", height = 11, width=50)
pdf("data.pdf", height = 11, width=50)
grid.table(tidy_data[1:25,1:6], gp=gpar(fontsize=6))
dev.off()
pdf("data.pdf", height = 11, width=50)
pdf("data.pdf", height = 11, width=50)
grid.table(tidy_data[1:30,], gp=gpar(fontsize=6))
dev.off()
?write.table
write.table(tidy_data,"Tidy_Data.txt", sep=" ")
